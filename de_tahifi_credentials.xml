<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/de/tahifi/credentials">
    <!--
    Interface for reading out stored credentials.
    -->
    <interface name="de.tahifi.Credentials.Read">
        <!--
        Retrieve categories managed by the object.

        The meaning of "category" depends on the object that implements this
        interface. For instance, a category might be a service name for TuneIn
        or the role for an administration interface.

        \param out_categories
            The categories the object knows about and may have credentials
            stored for. Returned categories may have no credentials stored.
            This is a array of string tuples of service ID (for internal
            purposes) and service description (for displaying purposes).
        \param proxy, cancellable, error  GDBus clutter.
        -->
        <method name="GetKnownCategories">
            <arg name="categories" type="a(ss)" direction="out"/>
        </method>

        <!--
        Retrieve all usernames and passwords stored for a category.

        \param arg_category
            Category to query.
        \param out_credentials
            All credentials (username, password) for the given category.
        \param out_default_user
            Name of the default user, if any. This string is empty in case
            there is no default username (in which case the category is also
            empty).
        \param proxy, cancellable, error  GDBus clutter.
        -->
        <method name="GetCredentials">
            <arg name="category" type="s" direction="in"/>
            <arg name="credentials" type="a(ss)" direction="out"/>
            <arg name="default_user" type="s" direction="out"/>
        </method>

        <!--
        Retrieve default credentials for a category.

        \param arg_category
            Category to query.
        \param out_username, out_password
            Default credentials for the given category.
        \param proxy, cancellable, error  GDBus clutter.
        -->
        <method name="GetDefaultCredentials">
            <arg name="category" type="s" direction="in"/>
            <arg name="username" type="s" direction="out"/>
            <arg name="password" type="s" direction="out"/>
        </method>
    </interface>

    <!--
    Interface for manipulation of stored credentials.
    -->
    <interface name="de.tahifi.Credentials.Write">
        <!--
        Set username and password in given category.

        In case the username does not exist, is added along with the given
        password to the given category. In case the username exists already,
        its password is updated.

        \param arg_category
            Category the credentials should be added to.
        \param arg_username, arg_password
            The credentials to be added.
        \param arg_is_default
            Whether or not these credentials should be treated as the
            category's default. In case the user added by this command is the
            first in the category, it is set as default regardless of the value
            of this argument.
        \param proxy, cancellable, error  GDBus clutter.
        -->
        <method name="SetCredentials">
            <arg name="category" type="s" direction="in"/>
            <arg name="username" type="s" direction="in"/>
            <arg name="password" type="s" direction="in"/>
            <arg name="is_default" type="b" direction="in"/>
        </method>

        <!--
        Set default username in given category.

        In case the username does not exist within the given category, then the
        default remains unchanged.
        -->
        <method name="SetDefaultUsername">
            <arg name="category" type="s" direction="in"/>
            <arg name="username" type="s" direction="in"/>
        </method>

        <!--
        Remove the given user from the category.

        In case the username was the category's default user, another username
        in that category is chosen as the new default. It is not specified how
        the new default username is picked.

        \param arg_category
            Category the credentials should be removed from.
        \param arg_username
            Username to be removed.
        \param out_default_user
            Name of the new default user, if any. This string is empty if the
            there is no default username, implying that the category is empty.
        \param proxy, cancellable, error  GDBus clutter.
        -->
        <method name="DeleteCredentials">
            <arg name="category" type="s" direction="in"/>
            <arg name="username" type="s" direction="in"/>
            <arg name="default_user" type="s" direction="out"/>
        </method>
    </interface>
</node>
